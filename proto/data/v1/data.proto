syntax = "proto3";

package data.v1;
option go_package = "./data/v1";

enum DataType {
	DATA_TYPE_UNSPECIFIED = 0;
	DATA_TYPE_ACTIVE_POWER = 1;
	DATA_TYPE_ANGLE = 2;
	DATA_TYPE_AUTOMATIC = 3;
	DATA_TYPE_BOOLEAN = 4; //DISCRETE (True or False)
	DATA_TYPE_CONFIG_CHANGE = 5; //DISCRETE (True or False)
	DATA_TYPE_CURRENT_SEQUENCE_NEGATIVE = 6; //PHASOR
	DATA_TYPE_CURRENT_SEQUENCE_POSITIVE = 7; //PHASOR
	DATA_TYPE_CURRENT_SEQUENCE_ZERO = 8; //PHASOR
	DATA_TYPE_DATA_ERROR = 9; //DISCRETE (True or False)
	DATA_TYPE_DATA_MODIFIED = 10; //DISCRETE (True or False)
	DATA_TYPE_DATA_SORTING = 11; //DISCRETE
	DATA_TYPE_ENERGY = 12; //ANALOG
	DATA_TYPE_FREQUENCY = 13; //ANALOG
	DATA_TYPE_LINE_CURRENT = 14; //ANALOG
	DATA_TYPE_LINE_TO_LINE_VOLTAGE = 15; //ANALOG
	DATA_TYPE_LOCAL_OPERATION = 16; //DISCRETE
	DATA_TYPE_OPERATION_COUNT = 17; //DISCRETE
	DATA_TYPE_PACKET_LATENCY = 18; //ANALOG
	DATA_TYPE_PHASE_VOLTAGE = 19; //ANALOG
	DATA_TYPE_PHASOR_CURRENT = 20; //PHASOR
	DATA_TYPE_PHASOR_VOLTAGE = 21; //PHASOR
	DATA_TYPE_PMU_SYNC = 22; //DISCRETE (True or False)
	DATA_TYPE_PMU_TIME_QUALITY = 23; //DISCRETE
	DATA_TYPE_PMU_TRIGGER_DETECTED = 24; //DISCRETE (True or False)
	DATA_TYPE_POWER = 25; //ANALOG
	DATA_TYPE_POWER_FACTOR = 26; //ANALOG
	DATA_TYPE_PRESSURE = 27; //ANALOG
	DATA_TYPE_RATE_OF_CHANGE_OF_FREQUENCY = 28; //ANALOG
	DATA_TYPE_REACTIVE_POWER = 29; //ANALOG
	DATA_TYPE_SWITCH_POSITION = 30; //DISCRETE (True or False)
	DATA_TYPE_TAP_POSITION = 31; //DISCRETE
	DATA_TYPE_TEMPERATURE = 32; //ANALOG
	DATA_TYPE_THREE_PHASE_ACTIVE_POWER = 33; //ANALOG
	DATA_TYPE_THREE_PHASE_CURRENT = 34; //ANALOG
	DATA_TYPE_THREE_PHASE_POWER = 35; //ANALOG
	DATA_TYPE_THREE_PHASE_POWER_FACTOR = 36; //ANALOG
	DATA_TYPE_THREE_PHASE_REACTIVE_POWER = 37; //ANALOG
	DATA_TYPE_TRIGGER_REASON = 38; //DISCRETE
	DATA_TYPE_UNLOCKED_TIME = 39;  //DISCRETE
	DATA_TYPE_VOLTAGE_SEQUENCE_NEGATIVE = 40; //PHASOR
	DATA_TYPE_VOLTAGE_SEQUENCE_POSITIVE = 41; //PHASOR
	DATA_TYPE_VOLTAGE_SEQUENCE_ZERO = 42; //PHASOR
	DATA_TYPE_DISCRETE = 43; //DISCRETE
	DATA_TYPE_ANALOG = 44; //ANALOG
}
	
message Data {
	DataType dataType = 1;
	int64 measuredAt = 2;
	optional uint64 value = 3;	
}

message DataSet {
	string producerId = 1;
	map<string, Data> data = 2;
}

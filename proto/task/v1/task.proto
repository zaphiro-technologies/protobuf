syntax = "proto3";

/* <!-- markdownlint-disable --> 
Messages to support task coordination among processes At the time being this
is a proof of concept. Different changes may occurs when we actually start
to event driven approach to coordinate tasks.*/ 

package task.v1;
option go_package = "./task/v1";

//The different type of tasks run by the real time processing.

enum TaskType {
	TASK_TYPE_UNSPECIFIED = 0;
	TASK_TYPE_COLLECTION = 1;
	TASK_TYPE_TOPOLOGY = 2;
	TASK_TYPE_STATE = 3;
	TASK_TYPE_FAULT = 4;
}

//The different type of notifications generated by the real time processing.

enum NotificationType {
	NOTIFICATION_TYPE_UNSPECIFIED = 0;
	NOTIFICATION_TYPE_DATA_COMPLETE = 1;
	NOTIFICATION_TYPE_DATA_TIMEOUT_1 = 2;
	NOTIFICATION_TYPE_DATA_TIMEOUT_2 = 3;
}

// A task message.

message Task {
	string id = 1; //Id of the task.
	TaskType taskType = 2; //Type of the task
	int64 createdAt = 3; //Task creation time (Unix Nano timestamp)
	optional string 	measurementID = 4; //Related measurement id (if any)
	optional int64 	timestampID = 5; //Related measurement timestamp (if any)
}

// A notification message.

message Notification {
	string id = 1; //Id of the notification
	NotificationType notificationType = 2; //Notification type
	int64 createdAt = 3; //Notification creation time (Unix Nano timestamp)
	string message = 4; //Notification message
	optional string 	measurementID = 5; //Related measurement id (if any)
	optional int64 	timestampID = 6; //Related measurement timestamp (if any)
}

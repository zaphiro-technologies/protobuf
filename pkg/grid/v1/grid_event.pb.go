// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: grid/v1/grid_event.proto

//  <!-- markdownlint-disable -->
//Messages to support grid event detection in the platform. Grid events are sub classes of Events.

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GridEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event        *Event  `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`                     //The base event message
	ComponentID  string  `protobuf:"bytes,2,opt,name=componentID,proto3" json:"componentID,omitempty"`         //The ID of the component where the event occurred.
	SubstationID *string `protobuf:"bytes,3,opt,name=substationID,proto3,oneof" json:"substationID,omitempty"` //The ID of the substation where the event occurred.
	StartedAt    int64   `protobuf:"varint,4,opt,name=startedAt,proto3" json:"startedAt,omitempty"`            //The timestamp where the event started (should be equal to timestampId in header).
	EndedAt      int64   `protobuf:"varint,5,opt,name=endedAt,proto3" json:"endedAt,omitempty"`                //The timestamp where the event ended.
	NominalValue float64 `protobuf:"fixed64,6,opt,name=nominalValue,proto3" json:"nominalValue,omitempty"`     //The measured / estimated value in relation to the event (e.g. in the case of a `VoltageEvent` is the voltage, in the case of a `CurrentEvent` is the current event).
	Percentage   float64 `protobuf:"fixed64,7,opt,name=percentage,proto3" json:"percentage,omitempty"`         //The percentage reached by the value compared to the reference limit or expected value.
	Probability  float64 `protobuf:"fixed64,8,opt,name=probability,proto3" json:"probability,omitempty"`       //The probability that the event actually occurred.
}

func (x *GridEvent) Reset() {
	*x = GridEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GridEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GridEvent) ProtoMessage() {}

func (x *GridEvent) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GridEvent.ProtoReflect.Descriptor instead.
func (*GridEvent) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{0}
}

func (x *GridEvent) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *GridEvent) GetComponentID() string {
	if x != nil {
		return x.ComponentID
	}
	return ""
}

func (x *GridEvent) GetSubstationID() string {
	if x != nil && x.SubstationID != nil {
		return *x.SubstationID
	}
	return ""
}

func (x *GridEvent) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *GridEvent) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *GridEvent) GetNominalValue() float64 {
	if x != nil {
		return x.NominalValue
	}
	return 0
}

func (x *GridEvent) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *GridEvent) GetProbability() float64 {
	if x != nil {
		return x.Probability
	}
	return 0
}

type VoltageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event     *GridEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`                                       //The base grid event message
	PhaseCode *PhaseCode `protobuf:"varint,2,opt,name=phaseCode,proto3,enum=grid.v1.PhaseCode,oneof" json:"phaseCode,omitempty"` //The phase for which the event occured
}

func (x *VoltageEvent) Reset() {
	*x = VoltageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoltageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoltageEvent) ProtoMessage() {}

func (x *VoltageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoltageEvent.ProtoReflect.Descriptor instead.
func (*VoltageEvent) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{1}
}

func (x *VoltageEvent) GetEvent() *GridEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *VoltageEvent) GetPhaseCode() PhaseCode {
	if x != nil && x.PhaseCode != nil {
		return *x.PhaseCode
	}
	return PhaseCode_PHASE_CODE_UNSPECIFIED
}

type CurrentEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *GridEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base grid event message
}

func (x *CurrentEvent) Reset() {
	*x = CurrentEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentEvent) ProtoMessage() {}

func (x *CurrentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentEvent.ProtoReflect.Descriptor instead.
func (*CurrentEvent) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{2}
}

func (x *CurrentEvent) GetEvent() *GridEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type PhaseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *GridEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base grid event message
}

func (x *PhaseEvent) Reset() {
	*x = PhaseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhaseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhaseEvent) ProtoMessage() {}

func (x *PhaseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhaseEvent.ProtoReflect.Descriptor instead.
func (*PhaseEvent) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{3}
}

func (x *PhaseEvent) GetEvent() *GridEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type FrequencyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *GridEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base grid event message
}

func (x *FrequencyEvent) Reset() {
	*x = FrequencyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrequencyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyEvent) ProtoMessage() {}

func (x *FrequencyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyEvent.ProtoReflect.Descriptor instead.
func (*FrequencyEvent) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{4}
}

func (x *FrequencyEvent) GetEvent() *GridEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type LineCongestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *CurrentEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base current grid event message
}

func (x *LineCongestion) Reset() {
	*x = LineCongestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineCongestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineCongestion) ProtoMessage() {}

func (x *LineCongestion) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineCongestion.ProtoReflect.Descriptor instead.
func (*LineCongestion) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{5}
}

func (x *LineCongestion) GetEvent() *CurrentEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type TransformerCongestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *CurrentEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base current grid event message
}

func (x *TransformerCongestion) Reset() {
	*x = TransformerCongestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformerCongestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformerCongestion) ProtoMessage() {}

func (x *TransformerCongestion) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformerCongestion.ProtoReflect.Descriptor instead.
func (*TransformerCongestion) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{6}
}

func (x *TransformerCongestion) GetEvent() *CurrentEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type VoltageUnbalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *VoltageEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base voltage grid event message
}

func (x *VoltageUnbalance) Reset() {
	*x = VoltageUnbalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoltageUnbalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoltageUnbalance) ProtoMessage() {}

func (x *VoltageUnbalance) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoltageUnbalance.ProtoReflect.Descriptor instead.
func (*VoltageUnbalance) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{7}
}

func (x *VoltageUnbalance) GetEvent() *VoltageEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type VoltageDip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *VoltageEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base voltage grid event message
}

func (x *VoltageDip) Reset() {
	*x = VoltageDip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoltageDip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoltageDip) ProtoMessage() {}

func (x *VoltageDip) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoltageDip.ProtoReflect.Descriptor instead.
func (*VoltageDip) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{8}
}

func (x *VoltageDip) GetEvent() *VoltageEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type VoltageInterruption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *VoltageEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base voltage grid event message
}

func (x *VoltageInterruption) Reset() {
	*x = VoltageInterruption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoltageInterruption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoltageInterruption) ProtoMessage() {}

func (x *VoltageInterruption) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoltageInterruption.ProtoReflect.Descriptor instead.
func (*VoltageInterruption) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{9}
}

func (x *VoltageInterruption) GetEvent() *VoltageEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type VoltageSwell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *VoltageEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base voltage grid event message
}

func (x *VoltageSwell) Reset() {
	*x = VoltageSwell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoltageSwell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoltageSwell) ProtoMessage() {}

func (x *VoltageSwell) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoltageSwell.ProtoReflect.Descriptor instead.
func (*VoltageSwell) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{10}
}

func (x *VoltageSwell) GetEvent() *VoltageEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type VoltageLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *VoltageEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base voltage grid event message
}

func (x *VoltageLimit) Reset() {
	*x = VoltageLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoltageLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoltageLimit) ProtoMessage() {}

func (x *VoltageLimit) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoltageLimit.ProtoReflect.Descriptor instead.
func (*VoltageLimit) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{11}
}

func (x *VoltageLimit) GetEvent() *VoltageEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type VoltageRapidChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *VoltageEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base voltage grid event message
}

func (x *VoltageRapidChange) Reset() {
	*x = VoltageRapidChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoltageRapidChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoltageRapidChange) ProtoMessage() {}

func (x *VoltageRapidChange) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoltageRapidChange.ProtoReflect.Descriptor instead.
func (*VoltageRapidChange) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{12}
}

func (x *VoltageRapidChange) GetEvent() *VoltageEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type OverFrequency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *FrequencyEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base frequency grid event message
}

func (x *OverFrequency) Reset() {
	*x = OverFrequency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverFrequency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverFrequency) ProtoMessage() {}

func (x *OverFrequency) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverFrequency.ProtoReflect.Descriptor instead.
func (*OverFrequency) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{13}
}

func (x *OverFrequency) GetEvent() *FrequencyEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type UnderFrequency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *FrequencyEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base frequency grid event message
}

func (x *UnderFrequency) Reset() {
	*x = UnderFrequency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnderFrequency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnderFrequency) ProtoMessage() {}

func (x *UnderFrequency) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnderFrequency.ProtoReflect.Descriptor instead.
func (*UnderFrequency) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{14}
}

func (x *UnderFrequency) GetEvent() *FrequencyEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type SteadyOscillation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *PhaseEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base phase grid event message
}

func (x *SteadyOscillation) Reset() {
	*x = SteadyOscillation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SteadyOscillation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SteadyOscillation) ProtoMessage() {}

func (x *SteadyOscillation) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SteadyOscillation.ProtoReflect.Descriptor instead.
func (*SteadyOscillation) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{15}
}

func (x *SteadyOscillation) GetEvent() *PhaseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type TransientOscillation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *PhaseEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` //The base phase grid event message
}

func (x *TransientOscillation) Reset() {
	*x = TransientOscillation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_v1_grid_event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransientOscillation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransientOscillation) ProtoMessage() {}

func (x *TransientOscillation) ProtoReflect() protoreflect.Message {
	mi := &file_grid_v1_grid_event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransientOscillation.ProtoReflect.Descriptor instead.
func (*TransientOscillation) Descriptor() ([]byte, []int) {
	return file_grid_v1_grid_event_proto_rawDescGZIP(), []int{16}
}

func (x *TransientOscillation) GetEvent() *PhaseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

var File_grid_v1_grid_event_proto protoreflect.FileDescriptor

var file_grid_v1_grid_event_proto_rawDesc = []byte{
	0x0a, 0x18, 0x67, 0x72, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x72, 0x69, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x13, 0x67, 0x72, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x67, 0x72, 0x69, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x02,
	0x0a, 0x09, 0x47, 0x72, 0x69, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x69,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x7d, 0x0a, 0x0c, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x69,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x69, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x38, 0x0a, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x69, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x50, 0x68, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x69, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x0e,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x67, 0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x69, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x67, 0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3f, 0x0a,
	0x10, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x67, 0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x39,
	0x0a, 0x0a, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x44, 0x69, 0x70, 0x12, 0x2b, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72,
	0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x13, 0x56, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x67, 0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a,
	0x0c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x53, 0x77, 0x65, 0x6c, 0x6c, 0x12, 0x2b, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x0c, 0x56, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x69, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x12, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x61, 0x70, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2b, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x0d, 0x4f, 0x76,
	0x65, 0x72, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x69,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x0e, 0x55, 0x6e,
	0x64, 0x65, 0x72, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2d, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72,
	0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x11, 0x53,
	0x74, 0x65, 0x61, 0x64, 0x79, 0x4f, 0x73, 0x63, 0x69, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x14, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x73, 0x63, 0x69, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x0b,
	0x5a, 0x09, 0x2e, 0x2f, 0x67, 0x72, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_grid_v1_grid_event_proto_rawDescOnce sync.Once
	file_grid_v1_grid_event_proto_rawDescData = file_grid_v1_grid_event_proto_rawDesc
)

func file_grid_v1_grid_event_proto_rawDescGZIP() []byte {
	file_grid_v1_grid_event_proto_rawDescOnce.Do(func() {
		file_grid_v1_grid_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_grid_v1_grid_event_proto_rawDescData)
	})
	return file_grid_v1_grid_event_proto_rawDescData
}

var file_grid_v1_grid_event_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_grid_v1_grid_event_proto_goTypes = []interface{}{
	(*GridEvent)(nil),             // 0: grid.v1.GridEvent
	(*VoltageEvent)(nil),          // 1: grid.v1.VoltageEvent
	(*CurrentEvent)(nil),          // 2: grid.v1.CurrentEvent
	(*PhaseEvent)(nil),            // 3: grid.v1.PhaseEvent
	(*FrequencyEvent)(nil),        // 4: grid.v1.FrequencyEvent
	(*LineCongestion)(nil),        // 5: grid.v1.LineCongestion
	(*TransformerCongestion)(nil), // 6: grid.v1.TransformerCongestion
	(*VoltageUnbalance)(nil),      // 7: grid.v1.VoltageUnbalance
	(*VoltageDip)(nil),            // 8: grid.v1.VoltageDip
	(*VoltageInterruption)(nil),   // 9: grid.v1.VoltageInterruption
	(*VoltageSwell)(nil),          // 10: grid.v1.VoltageSwell
	(*VoltageLimit)(nil),          // 11: grid.v1.VoltageLimit
	(*VoltageRapidChange)(nil),    // 12: grid.v1.VoltageRapidChange
	(*OverFrequency)(nil),         // 13: grid.v1.OverFrequency
	(*UnderFrequency)(nil),        // 14: grid.v1.UnderFrequency
	(*SteadyOscillation)(nil),     // 15: grid.v1.SteadyOscillation
	(*TransientOscillation)(nil),  // 16: grid.v1.TransientOscillation
	(*Event)(nil),                 // 17: grid.v1.Event
	(PhaseCode)(0),                // 18: grid.v1.PhaseCode
}
var file_grid_v1_grid_event_proto_depIdxs = []int32{
	17, // 0: grid.v1.GridEvent.event:type_name -> grid.v1.Event
	0,  // 1: grid.v1.VoltageEvent.event:type_name -> grid.v1.GridEvent
	18, // 2: grid.v1.VoltageEvent.phaseCode:type_name -> grid.v1.PhaseCode
	0,  // 3: grid.v1.CurrentEvent.event:type_name -> grid.v1.GridEvent
	0,  // 4: grid.v1.PhaseEvent.event:type_name -> grid.v1.GridEvent
	0,  // 5: grid.v1.FrequencyEvent.event:type_name -> grid.v1.GridEvent
	2,  // 6: grid.v1.LineCongestion.event:type_name -> grid.v1.CurrentEvent
	2,  // 7: grid.v1.TransformerCongestion.event:type_name -> grid.v1.CurrentEvent
	1,  // 8: grid.v1.VoltageUnbalance.event:type_name -> grid.v1.VoltageEvent
	1,  // 9: grid.v1.VoltageDip.event:type_name -> grid.v1.VoltageEvent
	1,  // 10: grid.v1.VoltageInterruption.event:type_name -> grid.v1.VoltageEvent
	1,  // 11: grid.v1.VoltageSwell.event:type_name -> grid.v1.VoltageEvent
	1,  // 12: grid.v1.VoltageLimit.event:type_name -> grid.v1.VoltageEvent
	1,  // 13: grid.v1.VoltageRapidChange.event:type_name -> grid.v1.VoltageEvent
	4,  // 14: grid.v1.OverFrequency.event:type_name -> grid.v1.FrequencyEvent
	4,  // 15: grid.v1.UnderFrequency.event:type_name -> grid.v1.FrequencyEvent
	3,  // 16: grid.v1.SteadyOscillation.event:type_name -> grid.v1.PhaseEvent
	3,  // 17: grid.v1.TransientOscillation.event:type_name -> grid.v1.PhaseEvent
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_grid_v1_grid_event_proto_init() }
func file_grid_v1_grid_event_proto_init() {
	if File_grid_v1_grid_event_proto != nil {
		return
	}
	file_grid_v1_event_proto_init()
	file_grid_v1_fault_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_grid_v1_grid_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GridEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoltageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhaseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrequencyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineCongestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformerCongestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoltageUnbalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoltageDip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoltageInterruption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoltageSwell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoltageLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoltageRapidChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverFrequency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnderFrequency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SteadyOscillation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_v1_grid_event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransientOscillation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_grid_v1_grid_event_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_grid_v1_grid_event_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grid_v1_grid_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_grid_v1_grid_event_proto_goTypes,
		DependencyIndexes: file_grid_v1_grid_event_proto_depIdxs,
		MessageInfos:      file_grid_v1_grid_event_proto_msgTypes,
	}.Build()
	File_grid_v1_grid_event_proto = out.File
	file_grid_v1_grid_event_proto_rawDesc = nil
	file_grid_v1_grid_event_proto_goTypes = nil
	file_grid_v1_grid_event_proto_depIdxs = nil
}

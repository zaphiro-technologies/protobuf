# -*- coding: utf-8 -*-
# Copyright 2024 Zaphiro Technologies
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zaphiro/grid/v1/data.proto
# Protobuf Python Version: 5.26.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1azaphiro/grid/v1/data.proto\x12\x0fzaphiro.grid.v1\"\x82\x01\n\x04\x44\x61ta\x12\x35\n\x08\x64\x61taType\x18\x01 \x01(\x0e\x32\x19.zaphiro.grid.v1.DataTypeR\x08\x64\x61taType\x12\x1e\n\nmeasuredAt\x18\x02 \x01(\x03R\nmeasuredAt\x12\x19\n\x05value\x18\x03 \x01(\x04H\x00R\x05value\x88\x01\x01\x42\x08\n\x06_value\"\xb1\x01\n\x07\x44\x61taSet\x12\x1e\n\nproducerId\x18\x01 \x01(\tR\nproducerId\x12\x36\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\".zaphiro.grid.v1.DataSet.DataEntryR\x04\x64\x61ta\x1aN\n\tDataEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12+\n\x05value\x18\x02 \x01(\x0b\x32\x15.zaphiro.grid.v1.DataR\x05value:\x02\x38\x01*\xb6\x0c\n\x08\x44\x61taType\x12\x19\n\x15\x44\x41TA_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n\x16\x44\x41TA_TYPE_ACTIVE_POWER\x10\x01\x12\x13\n\x0f\x44\x41TA_TYPE_ANGLE\x10\x02\x12\x17\n\x13\x44\x41TA_TYPE_AUTOMATIC\x10\x03\x12\x15\n\x11\x44\x41TA_TYPE_BOOLEAN\x10\x04\x12\x1b\n\x17\x44\x41TA_TYPE_CONFIG_CHANGE\x10\x05\x12\'\n#DATA_TYPE_CURRENT_SEQUENCE_NEGATIVE\x10\x06\x12\'\n#DATA_TYPE_CURRENT_SEQUENCE_POSITIVE\x10\x07\x12#\n\x1f\x44\x41TA_TYPE_CURRENT_SEQUENCE_ZERO\x10\x08\x12\x18\n\x14\x44\x41TA_TYPE_DATA_ERROR\x10\t\x12\x1b\n\x17\x44\x41TA_TYPE_DATA_MODIFIED\x10\n\x12\x1a\n\x16\x44\x41TA_TYPE_DATA_SORTING\x10\x0b\x12\x14\n\x10\x44\x41TA_TYPE_ENERGY\x10\x0c\x12\x17\n\x13\x44\x41TA_TYPE_FREQUENCY\x10\r\x12\x1a\n\x16\x44\x41TA_TYPE_LINE_CURRENT\x10\x0e\x12\"\n\x1e\x44\x41TA_TYPE_LINE_TO_LINE_VOLTAGE\x10\x0f\x12\x1d\n\x19\x44\x41TA_TYPE_LOCAL_OPERATION\x10\x10\x12\x1d\n\x19\x44\x41TA_TYPE_OPERATION_COUNT\x10\x11\x12\x1c\n\x18\x44\x41TA_TYPE_PACKET_LATENCY\x10\x12\x12\x1b\n\x17\x44\x41TA_TYPE_PHASE_VOLTAGE\x10\x13\x12\x1c\n\x18\x44\x41TA_TYPE_PHASOR_CURRENT\x10\x14\x12\x1c\n\x18\x44\x41TA_TYPE_PHASOR_VOLTAGE\x10\x15\x12\x16\n\x12\x44\x41TA_TYPE_PMU_SYNC\x10\x16\x12\x1e\n\x1a\x44\x41TA_TYPE_PMU_TIME_QUALITY\x10\x17\x12\"\n\x1e\x44\x41TA_TYPE_PMU_TRIGGER_DETECTED\x10\x18\x12\x13\n\x0f\x44\x41TA_TYPE_POWER\x10\x19\x12\x1a\n\x16\x44\x41TA_TYPE_POWER_FACTOR\x10\x1a\x12\x16\n\x12\x44\x41TA_TYPE_PRESSURE\x10\x1b\x12)\n%DATA_TYPE_RATE_OF_CHANGE_OF_FREQUENCY\x10\x1c\x12\x1c\n\x18\x44\x41TA_TYPE_REACTIVE_POWER\x10\x1d\x12\x1d\n\x19\x44\x41TA_TYPE_SWITCH_POSITION\x10\x1e\x12\x1a\n\x16\x44\x41TA_TYPE_TAP_POSITION\x10\x1f\x12\x19\n\x15\x44\x41TA_TYPE_TEMPERATURE\x10 \x12&\n\"DATA_TYPE_THREE_PHASE_ACTIVE_POWER\x10!\x12!\n\x1d\x44\x41TA_TYPE_THREE_PHASE_CURRENT\x10\"\x12\x1f\n\x1b\x44\x41TA_TYPE_THREE_PHASE_POWER\x10#\x12&\n\"DATA_TYPE_THREE_PHASE_POWER_FACTOR\x10$\x12(\n$DATA_TYPE_THREE_PHASE_REACTIVE_POWER\x10%\x12\x1c\n\x18\x44\x41TA_TYPE_TRIGGER_REASON\x10&\x12\x1b\n\x17\x44\x41TA_TYPE_UNLOCKED_TIME\x10\'\x12\'\n#DATA_TYPE_VOLTAGE_SEQUENCE_NEGATIVE\x10(\x12\'\n#DATA_TYPE_VOLTAGE_SEQUENCE_POSITIVE\x10)\x12#\n\x1f\x44\x41TA_TYPE_VOLTAGE_SEQUENCE_ZERO\x10*\x12\x16\n\x12\x44\x41TA_TYPE_DISCRETE\x10+\x12\x14\n\x10\x44\x41TA_TYPE_ANALOG\x10,\x12!\n\x1d\x44\x41TA_TYPE_NORMALIZED_RESIDUAL\x10-\x12 \n\x1c\x44\x41TA_TYPE_OBJECTIVE_FUNCTION\x10.\x12#\n\x1f\x44\x41TA_TYPE_SWITCH_POSITION_CHECK\x10/\x12\x1f\n\x1b\x44\x41TA_TYPE_TEMPERATURE_ALARM\x10\x30\x12\x1c\n\x18\x44\x41TA_TYPE_PRESSURE_ALARM\x10\x31\x12\x18\n\x14\x44\x41TA_TYPE_DOOR_ALARM\x10\x32\x42\x0bZ\t./grid/v1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'zaphiro.grid.v1.data_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\t./grid/v1'
  _globals['_DATASET_DATAENTRY']._loaded_options = None
  _globals['_DATASET_DATAENTRY']._serialized_options = b'8\001'
  _globals['_DATATYPE']._serialized_start=361
  _globals['_DATATYPE']._serialized_end=1951
  _globals['_DATA']._serialized_start=48
  _globals['_DATA']._serialized_end=178
  _globals['_DATASET']._serialized_start=181
  _globals['_DATASET']._serialized_end=358
  _globals['_DATASET_DATAENTRY']._serialized_start=280
  _globals['_DATASET_DATAENTRY']._serialized_end=358
# @@protoc_insertion_point(module_scope)

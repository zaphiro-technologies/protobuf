// Copyright 2024 Zaphiro Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

/* <!-- markdownlint-disable --> 
Messages to support coordination among processes/services in the platform.
At the time being this is a proof of concept. Different changes may occurs
when we actually start to use the event driven approach to coordinate
services. */

package zaphiro.platform.v1;
option go_package = "./platform/v1";

import "google/protobuf/any.proto"; //To support messages with fields of any type

//The different type of tasks run by the real time processing.

enum TaskType {
	TASK_TYPE_UNSPECIFIED = 0;
	TASK_TYPE_COLLECTION = 1;
	TASK_TYPE_TOPOLOGY = 2;
	TASK_TYPE_STATE = 3;
	TASK_TYPE_FAULT = 4;
}

//The different type of notifications generated by the real time processing.

enum NotificationType {
	NOTIFICATION_TYPE_UNSPECIFIED = 0;
	NOTIFICATION_TYPE_DATA_COMPLETE = 1;
	NOTIFICATION_TYPE_DATA_TIMEOUT_SHORT = 2;
	NOTIFICATION_TYPE_DATA_TIMEOUT_MEDIUM = 3;
	NOTIFICATION_TYPE_TRIGGER = 4;
 	NOTIFICATION_TYPE_TOPOLOGY_COMPUTED = 5;
}

//A parameter of a `Task` or `Notification`

message Parameter {
	string name = 1; //The parameter name
	google.protobuf.Any value = 2; //The parameter value
}

/* A task message.
Headers used in rabbitMQ:
* `id` (string): id of the `Task`
* `type` (string): always `Task`
* `producerId` (string): the id of the producer (e.g. a PMU) linked to the notification.
* `timestampId` (int64): related measurement Unix msec timestamp (if any)
* `taskType` (int8): The textual representation of the task type.
*/ 

message Task {
	TaskType taskType = 1; //Type of the task
	int64 createdAt = 2; //Task creation time (Unix msec timestamp)
	repeated Parameter parameters = 3;
}

/* A notification message.
Headers used in rabbitMQ:
* `id` (string): id of the `Notification`
* `type` (string): always `Notification`
* `producerId` (string): the id of the producer (e.g. a PMU) linked to the notification.
* `timestampId` (int64): related measurement Unix msec timestamp (if any)
* `notificationType` (int8): The textual representation of the notification type.
*/

message Notification {
	NotificationType notificationType = 1; //Notification type
	int64 createdAt = 2; //Notification creation time (Unix msec timestamp)
	string message = 3; //Notification message, it can be a string or a integer (which maps to a enum value).
	repeated Parameter parameters = 4;
}
